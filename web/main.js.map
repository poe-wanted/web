{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/storage.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".search {\\n  position: relative;\\n}\\n.search .fas {\\n  position: absolute;\\n  right: 30px;\\n  top: 28px;\\n}\\n.list-group-item {\\n  overflow: hidden;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-light bg-light\\\">\\n  <div class=\\\"container\\\">\\n    <span class=\\\"navbar-brand mb-0 h1\\\">Path of Exile <b class=\\\"text-danger\\\">WANTED</b></span>\\n    <form class=\\\"form-inline\\\">\\n      <button class=\\\"btn btn-outline-danger\\\" type=\\\"button\\\" (click)=\\\"openModal(report)\\\">Report character</button>\\n    </form>\\n  </div>\\n</nav>\\n<!-- <ais-instantsearch [config]=\\\"options\\\">\\n  <ais-search-box></ais-search-box>\\n  <ais-hits></ais-hits>\\n</ais-instantsearch> -->\\n<div class=\\\"container\\\">\\n  <p class=\\\"mt-4 lead\\\">This is a small tool to keep track of ongoing scammers, please don't abuse this by posting incorrect information, thank you and have a good one Exile.</p>\\n\\n  <p class=\\\"search shadow-sm p-3 mb-4 bg-white rounded\\\">\\n    <input [(ngModel)]=\\\"searchValue\\\" (ngModelChange)=\\\"search(searchValue)\\\" class=\\\"form-control\\\" placeholder=\\\"Search for reported users\\\">\\n    <i class=\\\"fas fa-search\\\"></i>\\n  </p>\\n  <div class=\\\"search-results\\\" infiniteScroll [infiniteScrollDistance]=\\\"2\\\" [infiniteScrollThrottle]=\\\"50\\\" (scrolled)=\\\"onScroll()\\\">\\n    <div [ngSwitch]=\\\"loaded\\\">\\n      <div *ngSwitchCase=\\\"true\\\">\\n        <div class=\\\"list-group\\\">\\n          <div class=\\\"list-group-item flex-column align-items-start\\\" *ngFor=\\\"let post of posts\\\">\\n            <div class=\\\"d-flex w-100 justify-content-between\\\">\\n              <h5 class=\\\"mb-1\\\">{{post.characterName}}</h5>\\n              <small class=\\\"text-muted\\\">{{post.timestamp.toDate() | date: 'dd/MM/yyyy'}}</small>\\n            </div>\\n            <small class=\\\"text-muted\\\">{{post.comment}}</small>\\n          </div>\\n        </div>\\n        <p *ngIf=\\\"posts && posts.length === 0\\\"><i>No reports found</i></p>\\n      </div>\\n      <div *ngSwitchDefault>Loading...</div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #report>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Report character</h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form name=\\\"reportForm\\\" ngNativeValidate (ngSubmit)=\\\"submitReport(formData)\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"characterName\\\">Character name: <abbr class=\\\"text-danger\\\" title=\\\"required\\\">*</abbr></label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"characterName\\\" [(ngModel)]=\\\"formData.characterName\\\" name=\\\"characterName\\\" required>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"comment\\\">Comment: <abbr class=\\\"text-danger\\\" title=\\\"required\\\">*</abbr></label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"comment\\\" [(ngModel)]=\\\"formData.comment\\\" name=\\\"comment\\\" required>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n    </form>\\n  </div>\\n</ng-template>\"","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { StorageService } from './storage.service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { environment } from './../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n    public  posts: any;\n    public  formData: object;\n    public  options:any;\n    private modalRef: BsModalRef;\n    private count: number = 0;\n    private loaded: boolean;\n    private displayLength:number = 10;\n\n    constructor(private storageService: StorageService,\n                private modalService: BsModalService) {\n    }\n\n    ngOnInit() {\n      this.getList(this.displayLength);\n      this.options = environment.algolia;\n    }\n\n    getList(limit) {\n      this.storageService.get(limit).subscribe(data => {\n        this.count++;\n        if (this.count === 2) {\n          this.loaded = true;\n        }\n        this.posts = data;\n      }, err => {\n        this.loaded = true;\n      })\n    }\n\n    openModal(template: TemplateRef<any>) {\n      this.formData = {};\n      this.modalRef = this.modalService.show(template);\n    }\n\n    submitReport(data) {\n      data.timestamp = new Date();\n      this.storageService.post(data).subscribe(response => {\n        this.modalRef.hide();\n      });\n    }\n\n    appendItems(data) {\n      let that = this;\n      data.forEach(function(value) {\n        that.displayLength ++;\n        that.posts.push(value);\n      });\n    }\n\n    onScroll() {\n      this.storageService.next(this.displayLength, this.posts[this.posts.length - 1]).subscribe(respones => {\n        this.appendItems(respones);\n      })\n    }\n\n    onSearch(string) {\n      this.storageService.search(string).subscribe(response => {\n        console.log('tere')\n        console.log(response);\n      });\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { TypeaheadModule, ModalModule } from 'ngx-bootstrap';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\nimport { AngularFireLite } from 'angularfire-lite';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { NgAisModule } from 'angular-instantsearch';\n\nimport { environment } from '../environments/environment';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    InfiniteScrollModule,\n    NgAisModule.forRoot(),\n    TypeaheadModule.forRoot(),\n    ModalModule.forRoot(),\n    AngularFireLite.forRoot(environment.config)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AngularFireLiteAuth, AngularFireLiteDatabase, AngularFireLiteFirestore } from 'angularfire-lite';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor(private db: AngularFireLiteDatabase,\n              private auth: AngularFireLiteAuth,\n              private firestore: AngularFireLiteFirestore) {\n  }\n\n  get(limit): Observable<any[]> {\n    return this.firestore.query('api/posts/poe').orderBy('timestamp', 'desc').limit(limit).on();\n  }\n\n  next(limit, data): Observable<any[]> {\n    return this.firestore.query('api/posts/poe').orderBy('timestamp', 'desc').startAfter(data.timestamp).limit(limit).on();\n  }\n\n  post(data): Observable<any> {\n    return this.firestore.push('api/posts/poe', data);\n  }\n\n  search(string): Observable<any> {\n    return this.firestore.query('api/posts/poe').orderBy('characterName').startAt(string).on();\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n\nexport const environment = {\n  production: false,\n  config: {\n    apiKey: \"AIzaSyAfsBZt4mzHQK05gDJnQ25Asy1UT4hzj7Y\",\n    authDomain: \"poe-shame-list.firebaseapp.com\",\n    databaseURL: \"https://poe-shame-list.firebaseio.com\",\n    projectId: \"poe-shame-list\",\n    storageBucket: \"poe-shame-list.appspot.com\",\n    messagingSenderId: \"80483182774\"\n  },\n  algolia: {\n    appId: 'PJMNOBZRQL',\n    apiKey: 'f81470db72199f0583e86761ed1b3522',\n    indexName: 'poe'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}